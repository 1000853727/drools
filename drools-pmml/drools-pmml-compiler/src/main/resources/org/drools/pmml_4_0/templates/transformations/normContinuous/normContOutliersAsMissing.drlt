

@comment{
    Extrapolates a piece-wise linear function, mapping outer values as missing
    /**
    * @param name        - derived field name
    * @param origField   - name of the original field to be mapped
    * @param xmin, xmax  - domain boundaries
    */
}

@declare{'normContOutliersAsMissingRule'}
rule "outliersAsMissing_@{name}"
when
  $src : @{origField}( missing == false, valid == true,
            value < @{xmin} || value > @{xmax}, $ctx : context
            @if{ context != null } , context == @{format("string",context)} @end{})
then
  @{name} x = new @{name}();
    x.setValue((@{type}) 0.0);        // not relevant
    x.setMissing(true);
    x.setValid(true);
    x.setContext($ctx);
    //x.setContinous();
  insertLogical(x);
end
@end{}

@includeNamed{'normContOutliersAsMissingRule'}