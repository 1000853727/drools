
@comment{
   Creates a question to fill a specific input field of a predictive model

   /**
    * @param model        - model's identifier name, assigned to the questionnaire
    */
}

@declare{'modelMultiQuestionRule'}
rule "Model_Multi_Question_@{model}_@{name}"
dialect "mvel"
no-loop
salience 99
when
then
    MultipleChoiceQuestion quest = new MultipleChoiceQuestion(@{format("string",model)}+"_"+@{format("string",name)});
        quest.setAnswerType("@{mapDatatypeToQuestion(dataType)}");
        quest.setPreLabel("Please insert " + @{format("string",name)});

        quest.setPossibleAnswers({
            @foreach{ val : valid }
                new PossibleAnswer(""+@{val},""+@{val})
            @end{","}

            @if{missing != null && missing.size > 0} , @end{}
            @foreach{ val : missing }
                new PossibleAnswer(""+@{val},""+@{val}+" (M)")
            @end{","}

            @if{invalid != null && invalid.size > 0} , @end{}
            @foreach{ val : invalid }
                new PossibleAnswer(""+@{val},""+@{val}+" (I)")
            @end{","}
	    });

    insertLogical(quest);
end
@end{}



@includeNamed{'modelMultiQuestionRule'}