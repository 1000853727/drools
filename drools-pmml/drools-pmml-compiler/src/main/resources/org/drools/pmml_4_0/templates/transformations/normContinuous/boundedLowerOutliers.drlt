
@comment{
    Linearly left-extrapolates a piece-wise function, setting the value to the minimum
    /**
    * @param name        - derived field name
    * @param index       - index of the linear tract (for linear piece-wise functions)
    * @param origField   - name of the original field to be mapped
    * @param xmin, xmax, ymin, ymax
    */
}


@declare{'boundedLowerOutliersRule'}
rule "outliersAsExtremesLow_@{name}"
when
  $src : @{origField}( missing == false, valid == true,
            value < @{xmin}, $ctx : context
            @if{ context != null } , context == @{format("string",context)} @end{})
then
  @{name} x = new @{name}();
    x.setValue((@{type}) @{ymin});
    x.setMissing(false);
    x.setValid(true);
    x.setContext($ctx);
    //x.setContinous();
  insertLogical(x);
end
@end{}


@includeNamed{'boundedLowerOutliersRule'}