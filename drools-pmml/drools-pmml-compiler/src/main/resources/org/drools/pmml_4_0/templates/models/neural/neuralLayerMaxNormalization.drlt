



@comment{
        Normalizes a neural layer using the max function
}

@declare{'neuralLayerMaxNormalizationRule'}

@code{ String ctx = format("string",model); }

rule "LayerNormalization_@{model}_@{j}"
salience 100
when
    $list : java.util.List( size == @{neurons.size} )
        from collect ( Stym( context == @{ctx},
                            index in ( @foreach{ neur : neurons } @{neur.id} @end{','} ),
                            normalized == false )
                     )
    Number( $den : doubleValue ) from accumulate (
            Stym( context == @{ctx},
                    index in ( @foreach{ neur : neurons } @{neur.id} @end{','} ),
                    normalized == false, $in : value
                ),
            sum( $in )
        )
then
    //System.out.println(">>>>>>>>>>>>>>  MAX LAYER SUM " + $den );
    for (int j = 0; j < $list.size(); j++) {
        Stym s = (Stym) $list.get(j);
        s.setNormalized(true);
        s.setValue(s.getValue() / $den);
        update(s);
    }
end

@end{}


@includeNamed{'neuralLayerMaxNormalizationRule'}


