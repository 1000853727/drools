
@comment{
    Collects a set of fields into a collection
    /**
    * @param name        - derived field name
    * @param groupBy     - optional parameter, causes the aggregation to be performed
    *                        conditionally on some constraint involving this datafield
    * @param afield      - type of the datafields to aggregate
    * @param constr      - groupby constraint
    */
}


@declare{'collectRule'}
rule "coll_@{name}"
when
    @if{groupBy != null} @{groupBy}( valid == true, missing == false, $gval : value) @end{}
    $agg : java.util.Collection() from collect (
        @{afield}( valid == true, missing == false
            @if{ context != null } , context == @{format("string",context)} @end{}
            @if{groupBy != null && constr != null} , value @{constr} $gval @end{} )
    )
then
    @{name} x = new @{name}();
    x.setValue($agg);
    x.setMissing(false);
    x.setValid(true);
  insertLogical(x);
end
@end{}


@includeNamed{'collectRule'}