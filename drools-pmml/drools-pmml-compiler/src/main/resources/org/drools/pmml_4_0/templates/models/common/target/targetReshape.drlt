
 @comment{
    Applies post-processing transformations to a target field value
    The transformations, if any, are in the following order:
        - integer cast (round, floor, ceil)
        - range check (min/max)
        - linear scaling (K*x + C)

    /**
    * @param name        - target field name
    * @param model       - name of the model using the field
    * @param cast        - type of integer cast : null, round, floor, ceil
    * @param min         - lower boundary, if value is lower will be replaced by this
    * @param max         - upper boundary, if value is higher will be replaced by this
    * @param scale       - linear transformation scaling coefficient K
    * @param offset      - linear transformation offset constant C
    */
}



@declare{'targetReshapeRule'}
rule "targetReshape_@{model}_@{field}_generic"
salience -100
no-loop
when
 $src : @{field}( $m : missing == false, $v : valid == true, context == @{format("string",model)}, $val : value )
then
    double x = $val;

    System.out.println("Intercepting target value " + x);
    @if{ cast != null }
        @if{ cast == "round" }
            x = Math.round(x);
        @elseif{ cast == "floor" }
            x = Math.floor(x);
        @elseif{ cast == "ceil" }
            x = Math.ceil(x);
        @end{}
    @end{}

    @if{ min != null }
        x = Math.max(x,@{min});
    @end{}

    @if{ max != null }
        x = Math.min(x,@{max});
    @end{}

    @if{ scale != null || offset != null }
        x = @if{scale != null} @{scale} * @end{} x @if{offset != null} + @{offset} @end{} ;
    @end{}

    $src.setValue(x);
    update($src);
end
@end{}


@includeNamed{'targetReshapeRule'}