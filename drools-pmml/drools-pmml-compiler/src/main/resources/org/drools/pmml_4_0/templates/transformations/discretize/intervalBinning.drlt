 @comment{
    Assigns a value to the derived field if the original value falls within one of the given intervals
    /**
    * @param name        - derived field name
    * @param origField   - the field to alias
    * @param intv        - the Interval (pmml)
    * @param index       - the bin index
    * @param target      - the value associated to the bin
    */
}


@declare{'intervalBinningRule'}
rule "bin_@{name}_@{index}"
when
    $in : @{origField}( valid == true, missing == false,
            value @if{intv.closure.startsWith("closed")}>=@else{}>@end{} @{intv.leftMargin} && value @if{intv.closure.endsWith("Closed")}<=@else{}<@end{} @{intv.rightMargin},
            $ctx : context  @if{ context != null } , context == @{format("string",context)} @end{}
          )
then
  @{name} x = new @{name}();
    x.setValue(@{target});
    x.setMissing(false);
    x.setValid(true);
    x.setContext($ctx);
  insertLogical(x);
end
@end{}



@includeNamed{'intervalBinningRule'}