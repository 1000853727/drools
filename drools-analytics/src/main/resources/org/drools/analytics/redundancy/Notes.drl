#created on: 12.10.2007
package org.drools.analytics.redundancy

#list any import classes here.
global AnalyticsResult result;



#declare any global variables here
import java.util.Collection;
import java.util.ArrayList;

import org.drools.analytics.components.PatternPossibility;
import org.drools.analytics.dao.AnalyticsResult;
import org.drools.analytics.report.components.Redundancy;
import org.drools.analytics.report.components.AnalyticsMessage;
import org.drools.analytics.report.components.Cause;



rule "Find redundant restrictions from pattern possibilities"
	when
		$r :Redundancy()
		PatternPossibility(
			items contains $r.left, 
			items contains $r.right 
		)
	then
		Collection<Cause> causes = new ArrayList<Cause>();
		causes.add( $r.getLeft() );
		causes.add( $r.getRight() );
		
		result.save(new AnalyticsMessage( 
						AnalyticsMessage.Severity.NOTE, AnalyticsMessage.MessageType.REDUNDANCY, 
						$r, "Same restriction exists twice.", causes ) );
end

