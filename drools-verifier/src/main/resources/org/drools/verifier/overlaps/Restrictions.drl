#created on: 2.2.2008
package org.drools.verifier.overlaps

#list any import classes here.
import java.util.Collection;
import java.util.ArrayList;

import org.drools.verifier.data.VerifierReport;

import org.drools.verifier.components.LiteralRestriction;

import org.drools.verifier.report.components.Subsumption;
import org.drools.verifier.report.components.Severity;
import org.drools.verifier.report.components.MessageType;
import org.drools.verifier.report.components.Overlap;

#declare any global variables here
global VerifierReport result;

#
# Fires when two restrictions are overlapping.
# Reports these restrictions as overlapping.
#
# Dependencies: Needs at least one rule.
#
#		package org.drools.verifier.subsumption.patterns
#			rule "Find subsumptant restrictions, greater than"
#			rule "Find subsumptant restrictions, less than"
#
# Example 1: Pattern1( a > 10 ) and Pattern1( a > 100 )
#
rule "Find overlapping restrictions"
	when
		# There is subsumption between two restrictions
		
		$left :LiteralRestriction()
		$right :LiteralRestriction(
			guid != $left.guid
		)
		
		$subsumption :Subsumption(
			left.guid == $left.guid,
			left.verifierComponentType == $left.verifierComponentType,
			right.guid == $right.guid,
			right.verifierComponentType == $right.verifierComponentType
		)
		
		# There is no restriction between these two restrictions.
		not	$center :LiteralRestriction(
				fieldGuid matches $left.fieldGuid,
				eval( $center.compareValues( $left ) == 1 ),
				eval( $center.compareValues( $right ) == -1 )
		)
	then 
		insert( new Overlap( $left, $right ) );
end

