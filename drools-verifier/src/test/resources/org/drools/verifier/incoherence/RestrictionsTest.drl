#created on: 18.10.2007
package org.drools.verifier.consequence

#list any import classes here.

#declare any global variables here


rule "Incoherent restrictions 1"
	when
		IncoherencePattern1( a == 1, a != 1 ) 
	then 
		# Test
end

rule "Incoherent restrictions 2"
	when
		IncoherencePattern2( a matches "text", a not matches "text" ) 
	then 
		# Test
end


rule "Incoherent restrictions 3"
	when
		$o :Object()
		IncoherencePattern3( a contains $o, a not contains $o ) 
	then 
		# Test
end


rule "Incoherent restrictions 4"
	when
		$list :ListItem()
		IncoherencePattern4( a memberOf $list, a not memberOf $list ) 
	then 
		# Test
end

rule "Incoherent restrictions 5"
	when
		$var :Object()
		IncoherencePattern5( a == $var, a != $var ) 
	then 
		# Test
end

rule "Incoherent restrictions 6"
	when
		$var :Object()
		IncoherencePattern6( a > $var, a < $var ) 
	then 
		# Test
end

rule "Incoherent restrictions 7"
	when
		IncoherencePattern7( a > 11, a < 11 ) 
	then 
		# Test
end

rule "Incoherent restrictions 8"
	when
		IncoherencePattern8( a > 10, a < 0 ) 
	then 
		# Test
end

#TODO:
rule "Incoherent restrictions 9"
	when
		IncoherencePattern9( a == 1, a == 2 ) 
	then 
		# Test
end

rule "Incoherent restrictions 10"
	when
		IncoherencePattern10( a == 1, a > 10 ) 
	then 
		# Test
end

rule "Incoherent restrictions 11"
	when
		IncoherencePattern11( a == 10, a < 1 ) 
	then 
		# Test
end

# no problems in this one
rule "Gold Discount High Priority"
   dialect "mvel"
   when
       customer : Customer( status > "30" && < "50" )
       order : OrderHeader( customer == customer , orderPriority == "3" || == "4" )
   then
       order.setOrderDiscount( 6.0 );
end 
