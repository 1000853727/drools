package org.drools.examples.wumpus.view

import org.drools.examples.wumpus.Move
import org.drools.examples.wumpus.Cell

import org.drools.examples.wumpus.Wumpus
import org.drools.examples.wumpus.Pit
import org.drools.examples.wumpus.Gold
import org.drools.examples.wumpus.Hero
import org.drools.examples.wumpus.SeeGlitter
import org.drools.examples.wumpus.SmellStench
import org.drools.examples.wumpus.FeelBreeze
import org.drools.examples.wumpus.FeelBump
import org.drools.examples.wumpus.HearScream
import org.drools.examples.wumpus.WumpusDeath
import org.drools.examples.wumpus.PitDeath
import org.drools.examples.wumpus.GoldWin
import org.drools.examples.wumpus.Reset
import org.drools.examples.wumpus.view.GameView
import org.drools.examples.wumpus.view.SensorsView

import org.drools.runtime.StatefulKnowledgeSession
import org.drools.logger.KnowledgeRuntimeLogger
import org.drools.logger.KnowledgeRuntimeLoggerFactory

import java.util.ArrayList

dialect "mvel"

/*
rule "Create Sensors View" when
    not SensorsView()
then
    insert( new SensorsView() );
end
*/

rule "Reset View" when
    Reset()
    $gv : GameView()
    $sv : SensorsView();
then
    retract( $sv );
    retract( $gv );
end

rule "Init Game View" salience -200 when
    not Reset()
    not GameView()
    accumulate( not Reset() and
                $p : Pit(),
                $pits : collectList( $p ) )
    $w : Wumpus()
    $g : Gold()
    $h : Hero()    
then
    SensorsView $sv = new SensorsView();
    insert( $sv );
    
    GameView $gv = new GameView();
    $gv.init( new Cell[5][5], $sv, new ArrayList( $pits ), $w, $g, $h, 50, 50, 3, 20, 5, 5);
    $gv.setKsession( (StatefulKnowledgeSession) kcontext.knowledgeRuntime );
    $gv.setKbase( ((StatefulKnowledgeSession) kcontext.knowledgeRuntime).knowledgeBase );
    
    KnowledgeRuntimeLogger klogger = KnowledgeRuntimeLoggerFactory.newFileLogger((StatefulKnowledgeSession) kcontext.knowledgeRuntime, "log/wumpus");   
    $gv.setKlogger( klogger );    
    insert( $gv );
end    

rule "init Cells" when
    $gv : GameView()
    $c :  Cell()
then
    Cell[] row = $gv.cells[$c.row];
    row[$c.col] = $c;
end  

rule "Create GUI" salience -100 when
    $gv : GameView()
    not GameUI()
then
    insert( new GameUI( ) ); 
    
end   

rule "Set GUI Game View" salience -100 when
    $gv : GameView()
    $ui : GameUI()
then
    $ui.setGameView( $gv );
end         

rule "Smell Stench View"  when 
    $s  : SensorsView()
          SmellStench()
then
    $s.smellStench = true;
end

rule "Stench Gone View" when
    $s  : SensorsView()
          not SmellStench()
then
    $s.smellStench = false;
end    

rule "Feel Breeze View"  when 
    $s  : SensorsView()
          FeelBreeze()
then   
    $s.feelBreeze = true; 
end

rule "Breeze Gone View" when
    $s  : SensorsView()
          not FeelBreeze()
then
    $s.feelBreeze = false;
end 

rule "Feel Bump View"  when 
    $s  : SensorsView()
          FeelBump()
then   
    $s.feelBump = true; 
end

rule "Bump Gone View" when
    $s  : SensorsView()
          not FeelBump()
then
    $s.feelBump = false;
end 

rule "See Glitter View"  when 
    $s  : SensorsView()
          SeeGlitter()
then
    $s.seeGlitter = true; 
end

rule "Glitter Gone View" when
    $s  : SensorsView()
          not SeeGlitter()
then
    $s.seeGlitter = false;
end 

rule "Hear Scream"  when 
    $s  : SensorsView()
          HearScream()
then
    $s.hearScream = true; 
end

rule "Wumpus Death View"   when
    $g  : GameView()
          WumpusDeath() 
then
	$g.wumpusDeath = true; 
end

rule "Pitt Game View" when
    $g : GameView()
         PitDeath()
then    
	$g.pitDeath = true; 
end

rule "Gold Win View"  when
    $g : GameView()
		 GoldWin()
then
	$g.goldWin = true;
end