package org.drools.examples.wumpus

global java.util.Random randomInteger;

dialect "mvel"

declare Score
	@propertySpecific
end	


declare Cell
	@propertySpecific
end		

declare Hero
	@propertySpecific
end	

declare Gold
	@propertySpecific
end	

declare Wumpus
    @propertySpecific
end  

rule "Insert Score" when
    not Reset()
    not Score()
then
    insert( new Score() );
end        
	
rule CreateCells when
    not Reset()
	$i : Integer() from [0, 1, 2, 3, 4]
	$j : Integer() from [0, 1, 2, 3, 4]
	$c : Cell() from new Cell($i, $j)
then
    insert( $c );
end

rule ShowFirstCell when
    $c : Cell( row == 0, col == 0 )
then
    modify( $c ) { hidden = false };
end    

rule CreatePitt when
    $c : Cell( row != 0, col != 0 )
    Number( this > 0 && <= 20 ) from randomInteger.nextInt( 100 )
then
    Pit pit = new Pit( $c.row, $c.col )    
    insert( pit );
end    

rule CreateWumpus when
    not Wumpus()// here to break sharing, to force new random numbers, also retriggers on retraction
    $row : Integer() from randomInteger.nextInt( 4 )
    $col : Integer() from randomInteger.nextInt( 4 )
then
    Wumpus wumpus = new Wumpus($row, $col);
    insert( wumpus );
end

rule InvalidWumpus salience 500 when
    $w : Wumpus( row == 0, col == 0 )    
then
    retract( $w ); // retraction triggers the "not" CE
end    

rule CreateGold when
    not Gold() // here to break sharing, to force new random numbers, also retriggers on retraction
    $row : Integer() from randomInteger.nextInt( 4 )
    $col : Integer() from randomInteger.nextInt( 4 )
then
    Gold gold = new Gold($row, $col);
    insert( gold );
end

rule InvalidGold salience 500 when
    $g : Gold( row == 0, col == 0 )  
    not Hero( gold == true ) // gold can be in row first square, if hero is carrying it
then
    retract( $g ); // retraction triggers the "not" CE
end 

rule CreateHero when
    not Reset()
then
    insert( new Hero( 0, 0 ) );
end    

rule "Reset Wumpus Death" when
    Reset()
    $wd : WumpusDeath()
then
    retract( $wd );
end 

rule "Reset Pit Death" when
    Reset()
    $pd : PitDeath()
then
    retract( $pd );
end   

rule "Reset Gold Win" when
    Reset()
    $gw : GoldWin()
then
    retract( $gw );
end

rule "Reset Pits" when
    Reset()
    $p : Pit()
then
    retract( $p );
end 


rule "Reset Cells" when
    Reset()
    $c : Cell()
then
    retract( $c );
end 

rule "Reset Score" when
    $r : Reset(resetScore == true)
    $s : Score()
then
    retract( $s );
end  

rule "Reset Done" salience -100 when
    $r : Reset()
    not Pit()
    not Cell()
    $w : Wumpus()
    $g : Gold()
    $h : Hero()
then
    retract( $w );
    retract( $g );    
    retract( $h );
    retract( $r );    
end 

  