package org.drools.adventures

import org.drools.adventures.Room;
import org.drools.adventures.Thing;

dialect "mvel"

rule printEvent salience 10 when
    ge : GameEvent()
    SessionCharacter( $us : session )    
then
    $us.channels["events"].send( ge );
end

rule updateOnCharacterSelected salience 5  when
    $selected : CharacterSelectedEvent( $char : character )
    SessionCharacter( character == $char, $us : session )                          
    ?look( $char, r, $things, $exits; )  
    ?inventory( $char, $inventory; )                                                        
then
    $us.channels["exits"].send( $exits );
    $us.channels["things"].send( $things ); 
    $us.channels["inventory"].send( $inventory ); 
      
    str = "You are in the " + r + "\n";
    str +="You can see " + $things + "\n";
    str +="Available exits are  " + $exits + "\n";
    str +="\n";
    
    $us.channels["output"].send( str ); 
end  

rule updateOnEnter salience 5  when
    $enter : EnterEvent( $room : room,
                         $char : character )
    SessionCharacter( character == $char, $us : session )                          
    ?things( $char, $things; )
    ?exits( $char, $exits; )                                                      
then
    $us.channels["exits"].send( $exits );
    $us.channels["things"].send( $things ); 
end   

rule updateOnPickup salience 5  when
    $pe : PickupEvent( $char : character)
    SessionCharacter( character == $char, $us : session )    
    ?things( $char, $things; )      
    ?inventory( $char, $inventory; )                             
then
   $us.channels["things"].send( $things );
   $us.channels["inventory"].send( $inventory );  
end  

rule updateOnDrop salience 5  when
    $pe : DropEvent( $char : character)
    SessionCharacter( character == $char, $us : session )    
    ?things( $char, $things; )      
    ?inventory( $char, $inventory; )                             
then
   $us.channels["things"].send( $things );
   $us.channels["inventory"].send( $inventory );  
end 

rule removeGameEvent when
    ge : GameEvent()
then
    retract ( ge );
end