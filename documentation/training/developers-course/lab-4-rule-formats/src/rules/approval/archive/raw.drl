#created on: 23/05/2006
package org.acme.insurance


rule "Driver underage"
	
	when
		Driver(age < 18)
	then 
		assert(new Rejection("Driver is underage"));
		
end

rule "Driver in marginal age bracket"
	when
		Driver(age > 18, age < 25, priorClaims > 1)
		Policy(type == "COMPREHENSIVE")
	then
		assert(new Rejection("No accidents accepted if in marginal age group"));
end

rule "Driver unsafe - accident history"
	when
		Driver(priorClaims > 3)
	then
		assert(new Rejection("Too many accidents"));
end

rule "Driver in unsafe area for comprehensive"
	when
		d: Driver(locationRiskProfile == "HIGH")
		d: Driver(age < 25)
		Policy(type == "COMPREHENSIVE")
	then
		assert(new Rejection("Driver in that area is too risky"));
end

rule "Driver in unsafe area for comprehensive and priors"
	when
		d : Driver(locationRiskProfile == "MED")
		d : Driver(priorClaims > 1)
		d : Driver(age < 25)
		Policy(type == "COMPREHENSIVE")					
	then
		assert(new Rejection("Driver in that area is too risky - given past accidents and age."));
end

rule "Driver unsafe for third party"
	when
		Policy(type == "THIRD_PARTY")
		Driver(priorClaims > 2)
	then
		assert(new Rejection("Too many priors for third party"));
end

rule "Driver in bad area for theft"

	when 
		Policy(type == "FIRE_THEFT")
		d : Driver(locationRiskProfile == "HIGH")
	then
		assert(new Rejection("Unsafe area for theft"));
end

rule "Quick approval - safe driver, any policy type"
	when
		not Rejection()
		d: Driver(age >= 30)
		d: Driver(priorClaims == 0)
	then
		assert(new Approve("Driver is safe, and mature"));
end

rule "Approve policy affirmative"
	salience 100 #this can short circuit any processing
	when
		a : Approve()
		p : Policy()
	then
		p.setApproved(true);
		System.out.println("APPROVED: " 
								+ a.getReason());
		drools.clearAgenda(); #stop processing (bit of a hack ;)
end

rule "Approve if not rejected"
	salience -100 #approve if there are no objections
	when
		not Rejection() 
		p : Policy(approved == false)
	then
		System.out.println("APPROVED: due to no objections."); 
		p.setApproved(true);
end

rule "Reject application"
	salience 100 #this can short circuit any other processing
	when
		r : Rejection()
		d : Driver()
		p : Policy()
	then
		System.out.println("REJECTED: " + r.getReason());
		p.setApproved(false);
		retract(d);
end

