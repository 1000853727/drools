package org.acme.insurance

#NOTE: This is designed to be used
# 	   with the approval.drl rules. This
#      just shows how you can span files, and keep
#      technical rules, like the ones below, seperate.
#
#      The rules below handle updating of the approval status, 
#	   and controlling the operation of the rules using salience (priority)


rule "Approve policy affirmative"
	salience 100 #this can short circuit any processing
	when
		a : Approve()
		p : Policy()
	then
		p.setApproved(true);
		System.out.println("APPROVED: " 
								+ a.getReason());
		drools.clearAgenda(); #stop processing (bit of a hack ;)
end

rule "Approve if not rejected"
	salience -100 #approve if there are no objections
	when
		not Rejection() 		
		p : Policy(approved == false)
	then
		System.out.println("APPROVED: due to no objections."); 
		p.setApproved(true);
end

rule "Reject application"
	salience 100 #this can short circuit any other processing
	when
		r : Rejection()
		d : Driver()
		p : Policy()
	then
		System.out.println("REJECTED: " + r.getReason());
		p.setApproved(false);
		retract(d); #effectively halts the rules
end
