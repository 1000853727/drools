package org.drools.reteoo;

/*
 * Copyright 2005 JBoss Inc
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import java.io.FileWriter;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.List;

import org.drools.WorkingMemory;
import org.drools.reteoo.event.LogEvent;

import com.thoughtworks.xstream.XStream;

/**
 * A logger of events generated by a working memory.
 * It stores its information in a file that can be specified.
 * All the events logged are written to the file when the
 * writeToDisk() method is invoked.  The log will contain all
 * the events logged serialized to XML using XStream.
 * 
 * TODO: make this class more scalable, for example
 *  - logging to several files if log becomes too large
 *  - automatically write updates to file at certain time intervals
 *  - ...
 * 
 * @author <a href="mailto:kris_verlaenen@hotmail.com">Kris Verlaenen </a>
 */
public class WorkingMemoryFileLogger extends WorkingMemoryLogger {

	private List events = new ArrayList();
	private String fileName= "event.log";
	
	/**
	 * Creates a new WorkingMemoryFileLogger for the given working memory.
	 * @param workingMemory
	 */
	public WorkingMemoryFileLogger(WorkingMemory workingMemory) {
		super(workingMemory);
	}
	
	/**
	 * Sets the name of the file the events are logged in.
	 * The default is an event.log file in the current working directory.
	 * This can be a path relative to the current working directory
	 * (e.g. "mydir/subDir/myLogFile.log"), or an absolute path 
	 * (e.g. "C:/myLogFile.log").
	 * 
	 * @param fileName The name of the file the events should be logged in.
	 */
	public void setFileName(String fileName) {
		this.fileName = fileName;
	}
	
	/**
	 * All events in the log are written to file.
	 * The log is not cleared afterwards.
	 */
	public void writeToDisk() {
		try {
			XStream xstream = new XStream();
			ObjectOutputStream out = xstream.createObjectOutputStream(new FileWriter(fileName));
			out.writeObject(events);
			out.close();
		} catch (Throwable t) {
			t.printStackTrace(System.err);
		}
	}
	
	/**
	 * Clears all the events in the log.
	 */
	public void clear() {
		events.clear();
	}

	/**
	 * @see org.drools.reteoo.WorkingMemoryLogger
	 */
	public void logEventCreated(LogEvent logEvent) {
		events.add(logEvent);
	}
}
