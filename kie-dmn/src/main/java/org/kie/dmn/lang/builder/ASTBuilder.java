/*
 * Copyright 2016 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.kie.dmn.lang.builder;

import org.kie.dmn.lang.ast.BaseNode;

/**
 * A super interface for all FEEL DescrBuilders.
 */
public interface ASTBuilder<P extends ASTBuilder< ? , ? >, T extends BaseNode> {

    /**
     * Sets the start location of the corresponding construction
     * in the source file.
     *
     * @param line
     * @param column
     *
     * @return itself, in order to be used as a fluent API
     */
    public ASTBuilder<P, T> startLocation( int line,
                                             int column );

    /**
     * Sets the end location of the corresponding construction
     * in the source file.
     *
     * @param line
     * @param column
     *
     * @return itself, in order to be used as a fluent API
     */
    public ASTBuilder<P, T> endLocation( int line,
                                           int column );

    /**
     * Sets the offset of the starting character of the
     * corresponding construction in the source file.
     *
     * @param offset the offset of the first character of
     *        this construction inside the source file, relative
     *        to the start.
     *
     * @return itself, in order to be used as a fluent API
     */
    public ASTBuilder<P, T> startCharacter( int offset );

    /**
     * Sets the offset of the starting character of the
     * corresponding construction in the source file.
     *
     * @param offset the offset of the first character of
     *        this construction inside the source file, relative
     *        to the start.
     *
     * @return itself, in order to be used as a fluent API
     */
    public ASTBuilder<P, T> endCharacter( int offset );

    /**
     * Returns the descriptor generated by this builder.
     *
     * @return
     */
    public T getDescr();

    /**
     * Completes the build of this descriptor and returns
     * the enclosing descr builder.
     *
     * @return
     */
    public P end();
}
