package org.drools;

global java.util.List results;

// [not] in
// [not] contains
// [not] memberOf
// excludes
// [not] matches

rule "eval rewrite with 'in'"
    salience 100
	when
	    Order( $id : number == 10 )
		$o : OrderItem( order.number in ( 1, (1+1), $id ), seq == 1 )
	then
	    results.add( $o );
end

rule "eval rewrite with 'not in'"
    salience 90
	when
	    Order( $id : number == 10 )
		$o : OrderItem( order.number not in ( 1, (1+1), ( $id + 1 ) ), order.number == $id, seq == 2 )
	then
	    results.add( $o );
end

rule "eval rewrite with 'contains'"
    salience 80
	when
		$o : OrderItem( order.number == 11, seq == 1 )
	    Order( this.itemsValues contains $o )
	then
	    results.add( $o );
end

rule "eval rewrite with 'not contains'"
    salience 70
	when
		$o : OrderItem( order.number == 11, seq == 2 )
	    Order( number == 12, this.itemsValues not contains $o )
	then
	    results.add( $o );
end

rule "eval rewrite with 'memberOf'"
    salience 60
	when
	    $order : Order( number == 12 )
		$o : OrderItem( seq == 1, order.number==12, this.seq memberOf $order.itemsKeys )
	then
	    results.add( $o );
end

rule "eval rewrite with 'not memberOf'"
    salience 50
	when
	    $order : Order( number == 11 )
		$o : OrderItem( seq == 3, order.number==12, this.seq not memberOf $order.itemsKeys )
	then
	    results.add( $o );
end

rule "eval rewrite with 'excludes'"
    salience 30
	when
		$o : OrderItem( order.number == 13, seq == 1 )
	    Order( number == 12, this.itemsValues excludes $o )
	then
	    results.add( $o );
end

rule "eval rewrite with 'matches'"
    salience 20
	when
	    $o : Order( number == 14, this.customer matches "Mark" )
	then
	    results.add( $o );
end

rule "eval rewrite with 'not matches'"
    salience 10
	when
	    $o : Order( number == 14, this.customer not matches "Bob" )
	then
	    results.add( $o );
end
