package org.drools.defeasible;

global java.util.List list;

declare A
    id  : int   @key
end

declare B
    id  : int   @key
end

declare C
    id  : int   @key
end

declare D
    id  : int   @key
end

declare X
    id  : int   @key
end

declare Y
    id  : int   @key
end



rule "Init"
when
then
    insert( new A( 1 ) );   // A(1) is a Fact
    insert( new A( 3 ) );   // A(1) is a Fact
    insert( new B( 2 ) );   // same for B(2)
end

rule "Defeater Rule"
@Defeater
@Defeats( "Rule 3" )
when
    B( 2; )
then
    insertLogical( new X( -1 ), "neg" );
end


rule "Rule 3"
@Defeasible
salience 2
when
    A( )
then
    System.out.println( "Defeasible Rule fires" );
    insertLogical( new X( -1 ) );
end


rule "Fire X"
salience 100
when
    X( -1; )
then
    System.out.println( "Strict Rule with high salience fires, that depends on defeasible fact" );
    list.add( "Stage1" );
end


rule "Never Ever 2"
salience -100
when
    X( -1; )
then
    System.out.println( "Strict Rule with low salience fires, that depends on defeasible fact" );
    list.add( "Stage2" );
end



rule "Defeater Defeater Rule"
@Defeats( "Defeater Rule" )
@Defeasible
when
    $s : String( this == "go" )
    B( 2; )
then
    System.out.println( "Defeater of a defeater rule fires" );
    insertLogical( new X( -1 ) );
end